@model List<KonferansPortal.Models.Konferans>

@{
    ViewData["Title"] = "OnKayitOnay";
}

<div>
    <h5>Konferans Seçiniz</h5>
    <select id="konferansCmbBox" name="konferansId" onchange="updateOnayGrid()">
        @foreach (var konferans in Model)
        {
            <option value="@konferans.Id"> @konferans.Name </option>
        }
    </select>
</div>

<div>
    <h5>Onay Bekleyenler</h5>
    <table class="table">
        <thead>
            <tr>
                <th>Üye</th>
                <th>Dekont</th>
                <th>Onay</th>
                <th>Red</th>
            </tr>
        </thead>
        <tbody id="onayBekleyenlerTableBody">

        </tbody>
</div>


@section Scripts {
    <script>
        async function updateOnayGrid() {
            const selected = document.getElementById('konferansCmbBox').value;
            if (selected != null) {
                const response = await fetch(`/Konferans/GetOnayBekleyenler?konferansId=${selected}`);
                const data = await response.json();
                const tableBody = document.getElementById('onayBekleyenlerTableBody');
                tableBody.innerHTML = '';

                if (data && data.length > 0) {
                    data.forEach(item => {
                        const row = document.createElement('tr');

                        const nameCell = document.createElement('td');
                        nameCell.innerHTML = `<h4>${item.Name} ${item.Surname}</h4>`;
                        row.appendChild(nameCell);

                        const dekontCell = document.createElement('td');
                        dekontCell.innerHTML = `<button onclick="dosyaindir()">Dekont</button>`;
                        row.appendChild(dekontCell);

                        const onayCell = document.createElement('td');
                        onayCell.innerHTML = `<button onclick="onayla()">Onayla</button>`;
                        row.appendChild(onayCell);

                        const redCell = document.createElement('td');
                        redCell.innerHTML = `<button onclick="reddet()">Reddet</button>`;
                        row.appendChild(redCell);

                        tableBody.appendChild(row);
                    });
                }
            }
        }

        async function dosyaindir(uyeId) {
            const selectedKonferansId = document.getElementById('konferansCmbBox').value;
            window.location.href = `/Konferans/DownloadDekont?konferansId=${selectedKonferansId}&uyeId=${uyeId}`;
        }

        async function onayla() {
            const response = await fetch(`/Konferans/OnKayitOnayla?konferansId=${selected}`);
            const data = await response.json();
            if (data) {
                alert("Onaylama İşlemi Yapıldı");
            }else{
                alert("Onaylama İşlemi Başarısız, Kapasite dolu");
            }
        
        }

        async function reddet() {
            const response = await fetch(`/Konferans/OnKayitReddet?konferansId=${selected}`);
            const data = await response.json();
            alert("Reddetme İşlemi Yapıldı");
        }

    </script>
}